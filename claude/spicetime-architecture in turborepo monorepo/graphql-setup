#!/bin/bash

# Create GraphQL layer structure
mkdir -p spicetime-architecture/monorepo/packages/services/gateway
mkdir -p spicetime-architecture/monorepo/packages/services/agent-service
mkdir -p spicetime-architecture/monorepo/internal/graphql/{schema,client}

# Create schema file
cat > spicetime-architecture/monorepo/internal/graphql/schema/schema.graphql << EOL
# Import our previously defined schema here
scalar DateTime
scalar JSON

enum PermissionScope {
  SYSTEM
  USER
  AGENT
  TASK
  RESOURCE
  AI
}
# ... rest of the schema
EOL

# Create gateway package.json
cat > spicetime-architecture/monorepo/packages/services/gateway/package.json << EOL
{
  "name": "@spicetime/gateway",
  "version": "0.0.1",
  "private": true,
  "scripts": {
    "dev": "ts-node-dev --respawn src/index.ts",
    "build": "tsc",
    "start": "node dist/index.js"
  },
  "dependencies": {
    "@apollo/server": "^4.0.0",
    "@apollo/gateway": "^2.0.0",
    "graphql": "^16.0.0",
    "jsonwebtoken": "^9.0.0"
  },
  "devDependencies": {
    "@types/node": "^18.0.0",
    "typescript": "^5.0.0",
    "ts-node-dev": "^2.0.0"
  }
}
EOL

# Create client package.json
cat > spicetime-architecture/monorepo/internal/graphql/client/package.json << EOL
{
  "name": "@spicetime/graphql-client",
  "version": "0.0.1",
  "private": true,
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "tsc",
    "generate": "graphql-codegen"
  },
  "dependencies": {
    "@apollo/client": "^3.0.0",
    "graphql": "^16.0.0",
    "graphql-ws": "^5.0.0"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "^5.0.0",
    "@graphql-codegen/typescript": "^4.0.0",
    "@graphql-codegen/typescript-operations": "^4.0.0",
    "typescript": "^5.0.0"
  }
}
EOL

echo "âœ¨ GraphQL layer structure created successfully!"
echo "Next steps:"
echo "1. cd spicetime-architecture"
echo "2. pnpm install"
echo "3. Copy the GraphQL schema, gateway implementation, and client code"
